<!DOCTYPE html>
<html>

<head>
    <meta name="viewport" content="initial-scale=1.0, user-scalable=no">
    <meta charset="utf-8">
    <title>Mappa Fermate Torino</title>
    <style>
        /* Always set the map height explicitly to define the size of the div
       * element that contains the map. */
        .top {
            position: absolute;
            height: 3%;
            z-index: 3000;
            margin-left: 9em;
            margin-top: 1em;
        }
        #map {
            height: 100%;
        }

        html,
        body {
            height: 100%;
            margin: 0;
            padding: 0;
        }
    </style>
</head>

<body>
    <div class="top">
        <button onclick="window.location.href='/logout'">Logout</button>
    </div>
    <div id="map"></div>
    <script>
        //come prima cosa chiediamo la lista fermata
        httpGetAsync("/listStops", getListStops);

        var jsonlist; //la lista fermate
        var prev_infowindow = false; //per avere una sola infowindow aperta

        /** Una volta arrivate le fermate parsa la lista e carica la mappa */
        function getListStops(list) {
            jsonlist = JSON.parse(list);
            loadMapsAPI();
        }
        /** GET di una pagina web in modo asincrono */
        function httpGetAsync(theUrl, callback) {
            var xmlHttp = new XMLHttpRequest();
            xmlHttp.onreadystatechange = function () {
                if (xmlHttp.readyState == 4 && xmlHttp.status == 200)
                    callback(xmlHttp.responseText);
            }
            xmlHttp.open("GET", theUrl, true); // true for asynchronous 
            xmlHttp.send(null);
        }

        /** Inizializziamo la mappa con posizione e marker */
        function initMap() {
            var map = new google.maps.Map(document.getElementById('map'), {
                zoom: 15,
                center: {
                    lat: 45.0638307,
                    lng: 7.6643373
                }
            });

            for (let i = 0; i < jsonlist.length; i++) {
                let obj = jsonlist[i];
                if (obj.geometry.coordinates[0] != undefined && obj.geometry.coordinates[1] != undefined && obj.properties
                    .ref != undefined) {
                    var myLatLng = {};
                    myLatLng.lng = Number(obj.geometry.coordinates[0]);
                    myLatLng.lat = Number(obj.geometry.coordinates[1]);

                    var marker = new google.maps.Marker({
                        position: myLatLng,
                        map: map
                    });

                    attachInfoMessage(marker, obj);

                }
            }
            
        }

        /** Ad ogni marker attacchiamo una infowindow che chiederÃ  info sui prossimi passaggi alle API */
        function attachInfoMessage(marker, obj) {
            var infowindow = new google.maps.InfoWindow({
                content: "<b>Fermata " + obj.properties.ref + " - " + obj.properties.name + "</b><br>" //+obj.geometry.coordinates[0]+ ";"+obj.geometry.coordinates[1]
            });

            marker.addListener('click', function () {
                if (prev_infowindow) {
                    prev_infowindow.close();
                }

                prev_infowindow = infowindow;
                infowindow.open(marker.get('map'), marker);
                httpGetAsync("/id/" + obj.properties.ref, function (data) {
                    let json = JSON.parse(data);
                    //console.log(json);
                    let text = "";
                    for (let i = 0; i < json.length; i++) {
                        let obj = json[i];
                        let rt = "";
                        if (obj.realtime.trim().toString() === 'false') {
                            rt = "(non RealTime)";
                        }
                        text += "<b>Linea: <u>" + obj.line + "</u></b> - " + obj.hour +
                            "&nbsp;&nbsp;&nbsp;&nbsp;" + rt;
                        text += "<br>";
                    }
                    text = infowindow.getContent() + "<br>" + text;
                    infowindow.setContent(text);
                });
            });
        }

        /** Caricamento delle API maps in modo asincrono */
        function addScript(url, callback) {
            var script = document.createElement('script');
            if (callback) script.onload = callback;
            script.type = 'text/javascript';
            script.src = url;
            document.body.appendChild(script);
        }

        /** Quando abbiamo valorizzato le strutture, carichiamo la mappa */
        function loadMapsAPI() {
            addScript(
                'https://maps.googleapis.com/maps/api/js?key=AIzaSyDT2hBEMtQcyjgQi5-PmleUxnlIm3as9CA&callback=initMap'
            );
        }
    </script>


</body>

</html>